{"version":3,"sources":["../index.js"],"names":["express","require","path","favicon","morgan","bodyParser","passport","session","logger","index","app","set","join","__dirname","use","stream","write","log","message","json","urlencoded","extended","initialize","static","req","res","next","err","Error","status","locals","error","get","render","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,UAAUF,QAAQ,eAAR,CAAhB;AACA,IAAMG,SAASH,QAAQ,QAAR,CAAf;AACA,IAAMI,aAAaJ,QAAQ,aAAR,CAAnB;AACA,IAAMK,WAAWL,QAAQ,UAAR,CAAjB;;AAEA,IAAMM,UAAUN,QAAQ,eAAR,CAAhB;AACA,IAAMO,SAASP,QAAQ,cAAR,CAAf;AACA,IAAMQ,QAAQR,QAAQ,oBAAR,CAAd;AACA;AACAA,QAAQ,YAAR;;AAEA,IAAMS,MAAMV,SAAZ;;AAEA;AACAU,IAAIC,GAAJ,CAAQ,OAAR,EAAiBT,KAAKU,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAD,IAAII,GAAJ,CAAQX,QAAQD,KAAKU,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,aAA/B,CAAR,CAAR;AACAH,IAAII,GAAJ,CAAQV,OAAO,UAAP,EAAmB;AACzBW,UAAQ;AACNC,WAAO,wBAAW;AAChBR,aAAOS,GAAP,CAAW,MAAX,EAAmBC,OAAnB;AACD;AAHK;AADiB,CAAnB,CAAR;AAOAR,IAAII,GAAJ,CAAQT,WAAWc,IAAX,EAAR;AACAT,IAAII,GAAJ,CAAQT,WAAWe,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAX,IAAII,GAAJ,CAAQP,OAAR,E,CAAoB;AACpBG,IAAII,GAAJ,CAAQR,SAASgB,UAAT,EAAR;AACAZ,IAAII,GAAJ,CAAQR,SAASC,OAAT,EAAR;AACAG,IAAII,GAAJ,CAAQd,QAAQuB,MAAR,CAAerB,KAAKU,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEA;AACAH,IAAII,GAAJ,CAAQ,GAAR,EAAaL,KAAb;;AAEA;AACAC,IAAII,GAAJ,CAAQ,UAASU,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,MAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAjB,IAAII,GAAJ,CAAQ,UAASa,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIK,MAAJ,CAAWZ,OAAX,GAAqBS,IAAIT,OAAzB;AACAO,MAAIK,MAAJ,CAAWC,KAAX,GAAmBP,IAAId,GAAJ,CAAQsB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCL,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,MAAIQ,MAAJ,CAAW,OAAX;AACD,CARD;;AAUAC,OAAOC,OAAP,GAAiBzB,GAAjB","file":"index.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst favicon = require('serve-favicon');\nconst morgan = require('morgan');\nconst bodyParser = require('body-parser');\nconst passport = require(\"passport\");\n\nconst session = require('./app/session');\nconst logger = require('./app/logger');\nconst index = require('./app/routes/index');\n// social authentication logic\nrequire(\"./app/auth\")();\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\napp.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(morgan('combined', {\n  stream: {\n    write: message => {\n      logger.log(\"info\", message);\n    }\n  }\n}));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(session);   // insert session\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(express.static(path.join(__dirname, 'public')));\n\n// mount routes\napp.use('/', index);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  let err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}