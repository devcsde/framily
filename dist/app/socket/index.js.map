{"version":3,"sources":["../../../app/socket/index.js"],"names":["h","require","module","exports","io","app","locals","chatrooms","allrooms","of","on","socket","emit","JSON","stringify","findRoomByName","newRoomInput","push","room","roomID","randomHex","users","broadcast","usersList","addUserToRoom","data","to","console","log","removeUserFromRoom"],"mappings":";;AAAA,IAAMA,IAAIC,QAAQ,YAAR,CAAV;;AAEAC,OAAOC,OAAP,GAAiB,UAACC,EAAD,EAAKC,GAAL,EAAa;AAC1BA,QAAIC,MAAJ,CAAWC,SAAX,GAAuB,EAAvB;AACA,QAAIC,WAAWH,IAAIC,MAAJ,CAAWC,SAA1B;;AAEAH,OAAGK,EAAH,CAAM,YAAN,EAAoBC,EAApB,CAAuB,YAAvB,EAAqC,kBAAU;AAC3CC,eAAOD,EAAP,CAAU,cAAV,EAA0B,YAAM;AAC5BC,mBAAOC,IAAP,CAAY,eAAZ,EAA6BC,KAAKC,SAAL,CAAeN,QAAf,CAA7B;AACH,SAFD;AAGAG,eAAOD,EAAP,CAAU,eAAV,EAA2B,wBAAgB;AACvC;AACA,gBAAI,CAACV,EAAEe,cAAF,CAAiBP,QAAjB,EAA2BQ,YAA3B,CAAL,EAA+C;AAC3C;AACAR,yBAASS,IAAT,CAAc;AACVC,0BAAMF,YADI;AAEVG,4BAAQnB,EAAEoB,SAAF,EAFE;AAGVC,2BAAO;AAHG,iBAAd;;AAMA;AACAV,uBAAOC,IAAP,CAAY,eAAZ,EAA6BC,KAAKC,SAAL,CAAeN,QAAf,CAA7B;AACA;AACAG,uBAAOW,SAAP,CAAiBV,IAAjB,CAAsB,eAAtB,EAAuCC,KAAKC,SAAL,CAAeN,QAAf,CAAvC;AACH;AACJ,SAfD;AAgBH,KApBD;;AAsBAJ,OAAGK,EAAH,CAAM,UAAN,EAAkBC,EAAlB,CAAqB,YAArB,EAAmC,kBAAU;AACzCC,eAAOD,EAAP,CAAU,MAAV,EAAkB,gBAAQ;AACtB,gBAAIa,YAAYvB,EAAEwB,aAAF,CAAgBhB,QAAhB,EAA0BiB,IAA1B,EAAgCd,MAAhC,CAAhB;AACA;AACA,gBAAIY,SAAJ,EAAe;AACXZ,uBAAOe,EAAP,CAAUD,KAAKN,MAAf,EAAuBP,IAAvB,CAA4B,iBAA5B,EAA+CC,KAAKC,SAAL,CAAeS,UAAUF,KAAzB,CAA/C;AACAV,uBAAOC,IAAP,CAAY,iBAAZ,EAA+BC,KAAKC,SAAL,CAAeS,UAAUF,KAAzB,CAA/B;AACH,aAHD,MAGO;AACHM,wBAAQC,GAAR,CAAY,sBAAZ;AACH;AAEJ,SAVD;AAWAjB,eAAOD,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC1B,gBAAIQ,OAAOlB,EAAE6B,kBAAF,CAAqBrB,QAArB,EAA+BG,MAA/B,CAAX;AACA,gBAAGO,IAAH,EAAQ;AACJP,uBAAOe,EAAP,CAAUR,KAAKC,MAAf,EAAuBP,IAAvB,CAA4B,iBAA5B,EAA+CC,KAAKC,SAAL,CAAeI,KAAKG,KAApB,CAA/C;AACH,aAFD,MAEO;AACHM,wBAAQC,GAAR,CAAY,kCAAZ;AACH;AAGJ,SATD;AAUAjB,eAAOD,EAAP,CAAU,YAAV,EAAwB,UAACe,IAAD,EAAU;AAC9Bd,mBAAOe,EAAP,CAAUD,KAAKN,MAAf,EAAuBP,IAAvB,CAA4B,WAA5B,EAAyCC,KAAKC,SAAL,CAAeW,IAAf,CAAzC;AACH,SAFD;AAGH,KAzBD;AA0BH,CApDD","file":"index.js","sourcesContent":["const h = require('../helpers');\n\nmodule.exports = (io, app) => {\n    app.locals.chatrooms = [];\n    let allrooms = app.locals.chatrooms;\n\n    io.of(\"/roomslist\").on(\"connection\", socket => {\n        socket.on(\"getChatrooms\", () => {\n            socket.emit(\"chatRoomsList\", JSON.stringify(allrooms));\n        });\n        socket.on(\"createNewRoom\", newRoomInput => {\n            //check to see if a room with same titel exists\n            if (!h.findRoomByName(allrooms, newRoomInput)) {\n                // if not, create one and broadcast it to everyone\n                allrooms.push({\n                    room: newRoomInput,\n                    roomID: h.randomHex(),\n                    users: []\n                });\n\n                // socket.emit to creator of chatroom\n                socket.emit(\"chatRoomsList\", JSON.stringify(allrooms));\n                // emit an updated list to everyone connected\n                socket.broadcast.emit(\"chatRoomsList\", JSON.stringify(allrooms));\n            }\n        })\n    });\n\n    io.of(\"/chatter\").on(\"connection\", socket => {\n        socket.on(\"join\", data => {\n            let usersList = h.addUserToRoom(allrooms, data, socket);\n            // update the list of active users\n            if (usersList) {\n                socket.to(data.roomID).emit('updateUsersList', JSON.stringify(usersList.users));\n                socket.emit('updateUsersList', JSON.stringify(usersList.users));\n            } else {\n                console.log(\"No users in channel.\");\n            }\n\n        });\n        socket.on(\"disconnect\", () => {\n            let room = h.removeUserFromRoom(allrooms, socket);\n            if(room){\n                socket.to(room.roomID).emit(\"updateUsersList\", JSON.stringify(room.users));\n            } else {\n                console.log(\"No room, because last user left.\");\n            }\n\n\n        });\n        socket.on(\"newMessage\", (data) => {\n            socket.to(data.roomID).emit('inMessage', JSON.stringify(data));\n        })\n    });\n};"]}